#!/bin/sh /etc/rc.common
# "new(er)" style init script
# Look at /lib/functions/service.sh on a running system for explanations of what other SERVICE_
# options you can use, and when you might want them.

START=80
STOP=10

USE_PROCD=1
PROG=/usr/sbin/vtund

. /lib/functions.sh

service_triggers()
{
	procd_add_reload_trigger "vtund"
}

vtun_add_instance() {
	local conf="$1"
	local host="$2"
	local server="$3"

	procd_open_instance
	procd_set_param command "$PROG" -n -f $conf $host $server
	procd_set_param file "$conf"
	procd_set_param respawn
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

generateConfig() {
	local dev
	local port
	local localip
	local remoteip
	local mtu
	local table
	local pref
	local metric

	config_get dev $1 dev "tun0"
	config_get host $1 host "Sticky"
	config_get conf $1 conf "/etc/vtund.conf"
	config_get server $1 server "127.0.0.1"
	config_get port $1 port "5005"
	config_get cipher $1 cipher "aes256cbc"
	config_get psk $1 psk "foobar"

	config_get localip $1 ip_local "10.166.177.2"
	config_get remoteip $1 ip_peer "10.166.177.1"

	config_get mtu $1 mtu "1450"
	config_get table $1 table "100"
	config_get pref $1 pref "10100"
	config_get metric $1 metric "1000"

	cat <<EOF >$conf

options {
	ip /usr/sbin/ip;
	ifconfig /sbin/ifconfig;
	firewall /usr/sbin/iptables;

	timeout 15;
	port $port;
}

# Default session options
default {
	compress no;          # Compression is off by default
	speed 0;              # By default maximum speed, NO shaping
}

$host
{
	passwd $psk;
	type tun;
	device $dev;
	proto tcp;
	persist yes;
	keepalive yes;
	timeout 15;
#compress zlib:9;
	encrypt $cipher;
	multi killold;
	up
	{
		ifconfig "%% $localip pointopoint $remoteip up";
		program "/usr/bin/multipath %% off";
		ip "rule add from $localip table $table pref $pref";
		ip "route add default via $remoteip table $table";
		ip "route add default via $remoteip metric $metric";
		program "/etc/init.d/shadowsocks start";
		program "ubus call network.interface.%% up";
	};
	down
	{
		program "ubus call network.interface.%% down";
		ifconfig "%% down ";
		ip "rule del from $localip table $table";
		ip "route del default via $remoteip table $table";
		program "/etc/init.d/shadowsocks stop";
	};
}

EOF
	# exit if conf is missing!
	if [ "$server" != "127.0.0.1" ]; then
		vtun_add_instance $conf $host $server
	fi
}

addInterface() {
	local dev="$1"
	local port
	local localip
	local remoteip
	local mtu
	local table
	local pref
	local metric

	config_get host $1 host "$dev"
	config_get conf $1 conf "/etc/vtund.${dev}.conf"

	config_get port $1 port "5008"
	config_get localip $1 ip_local "10.166.155.2"
	config_get remoteip $1 ip_peer "10.166.155.1"

	config_get mtu $1 mtu "1450"
	config_get pref $1 pref "10100"
	config_get table $1 table "100"
	config_get metric $1 metric "1100"

	cat <<EOF >$conf

options {
	ip /usr/sbin/ip;
	ifconfig /sbin/ifconfig;
	firewall /usr/sbin/iptables;

	timeout 15;
	port $port;
}

# Default session options
default {
	compress no;          # Compression is off by default
	speed 0;              # By default maximum speed, NO shaping
}

$host
{
	passwd $psk;
	type tun;
	device $dev;
	proto tcp;
	persist yes;
	keepalive yes;
	timeout 15;
#compress zlib:9;
	encrypt $cipher;
	multi killold;
	up
	{
		ifconfig "%% $localip pointopoint $remoteip up";
		program "/usr/bin/multipath %% off";
		ip "rule add from $localip table $table pref $pref";
		ip "route add default via $remoteip table $table";
		ip "route add default via $remoteip metric $metric";
	};
	down
	{
		ifconfig "%% down ";
		ip "rule del from $localip table $table";
		ip "route del default via $remoteip table $table";
	};
}

EOF
	if [ "$server" != "127.0.0.1" ]; then
		vtun_add_instance $conf $host $server
	fi
}

deleteClient() {
	local dev
	config_get dev $1 dev "tun0"
	ip link delete dev $dev &>/dev/null
}

deleteInterface() {
	local dev="$1"
	ip link delete dev $dev &>/dev/null
}

start_service() {
	if [ "$1" = "delayed" ] ; then
		[ "$(pgrep -fn $0)" -ne "$(pgrep -fo $0)" ] && echo "time already been set" && exit 1
		sleep 10
		/etc/init.d/vtund restart
		exit 1
	fi

	/bin/touch /etc/config/vtund
	config_load vtund
	rm -f /etc/vtund*.conf 2>/dev/null
	config_foreach deleteClient client
	config_foreach deleteInterface interface

	config_foreach generateConfig client
	config_foreach addInterface interface
}

