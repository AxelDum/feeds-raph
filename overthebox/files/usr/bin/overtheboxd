#!/usr/bin/env lua

-- Copyright 2015 OVH
-- Author: Simon Lelievre <sim@ovh.net>
-- Licensed to the public under the ?

local p   = require 'posix'
local sig = require "posix.signal"
local overthebox = require 'overthebox'


local json      = require("luci.json")
local uci       = require("luci.model.uci").cursor()

function error(str)
        p.syslog( p.LOG_ERR, str)
end
function log(str)
        p.syslog( p.LOG_NOTICE, str)
end
function debug(str)
        p.syslog( p.LOG_DEBUG, str)
end

run = true
local function handle_exit()
	log("end")
	run = false
end
sig.signal (sig.SIGINT,  handle_exit)

overthebox.debug = true

-- local rcode, ret = overthebox.get_service()
-- if rcode == 200 and ret.service then
--	overthebox.confirm_service(ret.service)
-- end

overthebox.notify_boot()

-- flush last action beforce start, next a reboot or a sysupgrade
local last_action_id = overthebox.get_last_action()
if last_action_id ~= nil then
        overthebox.confirm_action(last_action_id, true, "done")
end


local delay = 10
while run do
	local rcode, ret = overthebox.status()

	if rcode == 401 then
		rcode, ret = overthebox.subscribe()
		debug("subscribe : ", ret)
		if not rcode then
			error("can not subscribe to api : " .. ret.error )
		end
	elseif rcode == 200 and ret.action then
		local actionreturn
		local msg
		debug("I do : "..ret.action)

		if     ret.action == "update" then
			actionreturn, msg = overthebox.opkg_update()
		elseif ret.action == "upgradable" then
			actionreturn, msg = overthebox.opkg_upgradable()
		elseif ret.action == "install" then
			actionreturn, msg = overthebox.opkg_install(ret.param)
		elseif ret.action == "upgrade" then
                        actionreturn, msg = overthebox.upgrade()
		elseif ret.action == "sysupgrade" then
			overthebox.backup_last_action(ret.id)
                        overthebox.sysupgrade()
			run = false
		elseif ret.action == "configure" then
			actionreturn, msg = overthebox.config()
		        for i = 1, #msg do
				overthebox.restart(msg[i])
        		end

		elseif ret.action == "reboot" then
			overthebox.backup_last_action(ret.id)
			overthebox.reboot()
			run = false
		elseif ret.action == "askServiceConfirmation" then
			actionreturn, msg = overthebox.get_service()
			if actionreturn == 200 then
				if msg and msg.service then
					overthebox.ask_service_confirmation(msg.service)
				else
					actionreturn = 500
					msg = "can not retreive service"
				end
			end
                elseif ret.action == "" then
                        delay = ret.arguments.delay or 10
		end
		if actionreturn ~= nil then
			if actionreturn == true then
				actionreturn = "done"
			elseif actionreturn == false then
				actionreturn = "error"
			end
			log(actionreturn, msg)
			overthebox.confirm_action(ret.id, actionreturn, msg)
		end
	end

        p.sleep(delay)
end

overthebox.notify_shutdown()

