diff --git a/cmd/scollector/collectors/ifstat_linux.go b/cmd/scollector/collectors/ifstat_linux.go
index 51c92ac..84360a3 100644
--- a/cmd/scollector/collectors/ifstat_linux.go
+++ b/cmd/scollector/collectors/ifstat_linux.go
@@ -5,6 +5,7 @@ import (
 	"io/ioutil"
 	"path/filepath"
 	"regexp"
+	"strconv"
 	"strings"
 	"time"
 
@@ -43,8 +44,7 @@ var netFields = []struct {
 	{"compressed", metadata.Counter, metadata.Count},
 }
 
-var ifstatRE = regexp.MustCompile(`\s+(eth\d+|em\d+_\d+/\d+|em\d+_\d+|em\d+|` +
-	`bond\d+|team\d+|` + `p\d+p\d+_\d+/\d+|p\d+p\d+_\d+|p\d+p\d+):(.*)`)
+var ifstatRE = regexp.MustCompile(`(?:\s+)?([^:]+):(.*)`)
 
 func c_ipcount_linux() (opentsdb.MultiDataPoint, error) {
 	var md opentsdb.MultiDataPoint
@@ -107,6 +107,21 @@ func c_ifstat_linux() (opentsdb.MultiDataPoint, error) {
 				}, netFields[i].rate, netFields[i].unit, "")
 
 			}
+
+			// Add the network speed in bits
+			// 0 = bytes received
+			// 8 = bytes transmitted
+			if i == 0 || i == 8 {
+				speed, err := strconv.Atoi(v)
+				if err != nil {
+					return err
+				}
+
+				Add(&md, "linux.net.bits", speed*8, opentsdb.TagSet{
+					"iface":     intf,
+					"direction": direction(i),
+				}, netFields[i].rate, metadata.Bits, "")
+			}
 		}
 		return nil
 	})
diff --git a/metadata/metadata.go b/metadata/metadata.go
index 8572eed..8899d66 100644
--- a/metadata/metadata.go
+++ b/metadata/metadata.go
@@ -32,6 +32,7 @@ const (
 // Unit is the unit for a metric.
 type Unit string
 
+// Units
 const (
 	// None is a not-yet documented unit.
 	None           Unit = ""
@@ -39,6 +40,7 @@ const (
 	Alert               = "alerts"
 	Abort               = "aborts"
 	Bool                = "bool"
+	Bits                = "bits"
 	BitsPerSecond       = "bits per second"
 	Bytes               = "bytes"
 	BytesPerSecond      = "bytes per second"
